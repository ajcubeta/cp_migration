adapter: postgresql
database: cp_migrate
pool: 5
# timeout: 5000
user: postgres
password: root


# Best thing to DO: https://github.com/plataformatec/devise
#
# Migrating from other solutions
# Devise implements encryption strategies for Clearance, Authlogic and Restful-Authentication.
# To make use of these strategies, you need set the desired encryptor in the encryptor initializer
# config option and add :encryptable to your model. You might also need to rename your encrypted password
# and salt columns to match Deviseâ€™s fields (encrypted_password and password_salt).

# 1. Devise install
# 2. Add necessary attributes from original migration users.rb
# Dump careerpacific_production.sql to PostreSQL cp_migration_development mode
# 3. Create migration to update :crypted_password and other attributes on devise.
# 4. http://developer.postgresql.org/pgdocs/postgres/app-createuser.html
# mysqldump --opt -u root -proot careerpacific_development users > cp_migration.sql

# dropuser postgres
# createuser postgres -P
# role: root
# rake db:create:all
# rake db:migrate

# rvm list
# ruby-1.9.2-head


# http://www.sitepoint.com/site-mysql-postgresql-1/
# http://www.xach.com/aolserver/mysql-to-postgresql.html
# http://en.wikibooks.org/wiki/Converting_MySQL_to_PostgreSQL
# http://mindlev.wordpress.com/2010/03/15/migrating-mysql-to-postgresql-in-rails/

# I know this is probably not the answer you are looking for, but: I don't believe in "automated" migration tools.
# Take your existing SQL Scripts that create your database schema, do a search and replace for the necessary data types
# (autonumber maps to serial which does all the sequence handling automagically for you), remove all the "engine=" stuff
# and then run the new script against Postgres.
# Dump the old database into flat files and import them into the target.
# I have done this several times with sample databases that were intended for MySQL and it really doesn't take that long.
# Probably just as long as trying all the different "automated" tools.


ONLY THESE FIELDS WILL BE ADDED ON USERS TABLE:
# t.string    :encrypted_password, :limit => 40
# t.string    :remember_token,     :limit => 40
# t.string    :reset_password_token
# t.datetime  :remember_created_at
# t.integer   :sign_in_count
# t.datetime  :current_sign_in_at
# t.datetime  :last_sign_in_at
# t.string    :current_sign_in_ip
# t.string    :last_sign_in_ip



RUN THE MYSQL2POSTGRES GEM USING THIS SETTINGS:  (mysql2psql.yml)

mysql:
 hostname: localhost
 port: 3306
 adapter: mysql2
 encoding: utf8
 reconnect: false
 database: careerpacific_development
 username: root
 password: root
 pool: 5
 socket: /tmp/mysql.sock


destination:
 # if file is given, output goes to file, else postgres
 file:
 postgres:
  hostname: localhost
  database: cp_migration_dev # mysql2psql_test
  port: 5432
  username: root
  password: root


# if tables is given, only the listed tables will be converted.  leave empty to convert all tables.
tables:
- users
#- table2
# if exclude_tables is given, exclude the listed tables from the conversion.
#exclude_tables:
#- table3
#- table4